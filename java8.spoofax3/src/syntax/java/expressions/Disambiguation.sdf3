module syntax/java/expressions/Disambiguation

imports
  syntax/java/expressions/ClassInstanceCreation
  syntax/java/expressions/Postfix
  syntax/java/expressions/UnaryOperators
  syntax/java/expressions/BinaryOperators
  syntax/java/expressions/ArrayAccess
  syntax/java/expressions/FieldAccess
  syntax/java/expressions/MethodInvocation
  syntax/java/expressions/AssignmentOperators
  syntax/java/expressions/LambdaExpressions
  syntax/java/names/Names
  
context-free priorities

  FieldAccess.Field > 
  Expression = ExpressionName,
  
  ElementValue = Expression <0> >
  Expression.Assign  

context-free priorities

  Expression.QualifiedInstance > 
  {right: 
    Expression.PostIncr 
    Expression.PostDecr } >
  { 
    Expression.CastPrimitive 
    Expression.CastReference }

context-free priorities
  
  Expression.CastPrimitive > 
  {left: 
    Expression.Mul 
    Expression.Div
    Expression.Mod }
  
context-free priorities
  
  Expression.CastReference > 
  { Expression.PreIncr
    Expression.PreDecr
    Expression.Plus
    Expression.Minus }
  ,
  Expression.CastReference <4> .> 
  { Expression.Plus
    Expression.Minus }   
    
 
context-free priorities
  
  { ArrayAccess.ArrayAccess 
    FieldAccess.Field 
    Expression.InvokeQExp } <0> >
  {right: 
    Expression.PostIncr 
    Expression.PostDecr } >
  { Expression.PreIncr 
    Expression.PreDecr 
    Expression.Plus 
    Expression.Minus 
    Expression.Complement 
    Expression.Not } >
  {left:
     Expression.Mul 
     Expression.Div 
     Expression.Mod } >
  {left: 
    Expression.Add 
    Expression.Sub } >
  {left: 
    Expression.LeftShift 
    Expression.RightShift 
    Expression.URightShift } >
  {left: 
    Expression.InstanceOf 
    Expression.Lt 
    Expression.Gt 
    Expression.LtEq 
    Expression.GtEq } >
  {left: 
    Expression.Eq 
    Expression.NotEq } >
  Expression.And >
  Expression.Xor >
  Expression.Or >
  Expression.LazyAnd >
  Expression.LazyOr >
  Expression.Cond >
  {right: 
    Expression.Assign
    Expression.AssignMul
    Expression.AssignDiv
    Expression.AssignMod
    Expression.AssignAdd
    Expression.AssignSub
    Expression.AssignLeftShift
    Expression.AssignRightShift
    Expression.AssignURightShift
    Expression.AssignAnd
    Expression.AssignXor
    Expression.AssignOr
    Expression.LambdaExpression }

lexical restrictions

  "+" -/- [\+]
  "-" -/- [\-]
  "/" -/- [\/]
