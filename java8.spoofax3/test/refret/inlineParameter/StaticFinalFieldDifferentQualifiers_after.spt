module refret/inlineParameter/StaticFinalFieldDifferentQualifiers_after

test parse: StaticFinalFieldDifferentQualifiers_after [[
  test;
  [A]
      public class A {
      void test() {
        String[] myValue = CONST;
      }
  
      void callTest() {
        test();
      }
  
      void callTest2() {
        test();
      }
  
      public static final String[] CONST = new String[] { "A", "B" };
    }
]] parse succeeds

test analysis: StaticFinalFieldDifferentQualifiers_after [[
  test;
  [A]
      public class A {
      void test() {
        String[] myValue = CONST;
      }
  
      void callTest() {
        test();
      }
  
      void callTest2() {
        test();
      }
  
      public static final String[] CONST = new String[] { "A", "B" };
    }
]] run test-analyze to SUCCEED()

test refret 0: StaticFinalFieldDifferentQualifiers_after [[
  test;
  [A]
      public class A {
      void test() {
        String[] myValue = [[CONST]];
      }
  
      void callTest() {
        test();
      }
  
      void callTest2() {
        test();
      }
  
      public static final String[] [[CONST]] = new String[] { "A", "B" };
    }
]] run fix-reference(|#1, #2) to [[
  test;
  [A]
      public class A {
      void test() {
        String[] myValue = CONST;
      }
  
      void callTest() {
        test();
      }
  
      void callTest2() {
        test();
      }
  
      public static final String[] CONST = new String[] { "A", "B" };
    }
]]

test refret 1: StaticFinalFieldDifferentQualifiers_after [[
  test;
  [A]
      public class A {
      void [[test]]() {
        String[] myValue = CONST;
      }
  
      void callTest() {
        [[test]]();
      }
  
      void callTest2() {
        test();
      }
  
      public static final String[] CONST = new String[] { "A", "B" };
    }
]] run fix-reference(|#2, #1) to [[
  test;
  [A]
      public class A {
      void test() {
        String[] myValue = CONST;
      }
  
      void callTest() {
        test();
      }
  
      void callTest2() {
        test();
      }
  
      public static final String[] CONST = new String[] { "A", "B" };
    }
]]

test refret 2: StaticFinalFieldDifferentQualifiers_after [[
  test;
  [A]
      public class A {
      void [[test]]() {
        String[] myValue = CONST;
      }
  
      void callTest() {
        test();
      }
  
      void callTest2() {
        [[test]]();
      }
  
      public static final String[] CONST = new String[] { "A", "B" };
    }
]] run fix-reference(|#2, #1) to [[
  test;
  [A]
      public class A {
      void test() {
        String[] myValue = CONST;
      }
  
      void callTest() {
        test();
      }
  
      void callTest2() {
        test();
      }
  
      public static final String[] CONST = new String[] { "A", "B" };
    }
]]

