module refret/casts

test castsx [[
test;

[p] {
  [A]
  package p;

  class A { int [[x]]; }
}

[q] {
  [A]
  package q;

  class A extends p.A { int [[x]]; }

  [B]
  package q;

  class B extends A { int [[x]]; }

  [C]
  package q;

  class C extends B { int [[x]]; }

  [Main]
  package q;

  class Main {
    public int getX(C [[c]]) {
      return [[c.x]];
    }
  }
}


]]
run test-analyze to SUCCEED()
run fix-reference(|#6, #1, #5) to [[
test;

[p] {
  [A]
  package p;

  class A { int x; }
}

[q] {
  [A]
  package q;

  class A extends p.A { int x; }

  [B]
  package q;

  class B extends A { int x; }

  [C]
  package q;

  class C extends B { int x; }

  [Main]
  package q;

  class Main {
    public int getX(C c) {
      return ((p.A) c).x;
    }
  }
}
]]

run fix-reference(|#6, #2, #5) to [[
test;

[p] {
  [A]
  package p;

  class A { int x; }
}

[q] {
  [A]
  package q;

  class A extends p.A { int x; }

  [B]
  package q;

  class B extends A { int x; }

  [C]
  package q;

  class C extends B { int x; }

  [Main]
  package q;

  class Main {
    public int getX(C c) {
      return ((A) c).x;
    }
  }
}
]]

run fix-reference(|#6, #3, #5) to [[
test;

[p] {
  [A]
  package p;

  class A { int x; }
}

[q] {
  [A]
  package q;

  class A extends p.A { int x; }

  [B]
  package q;

  class B extends A { int x; }

  [C]
  package q;

  class C extends B { int x; }

  [Main]
  package q;

  class Main {
    public int getX(C c) {
      return ((B) c).x;
    }
  }
}
]]

run fix-reference(|#6, #4, #5) to [[
test;

[p] {
  [A]
  package p;

  class A { int x; }
}

[q] {
  [A]
  package q;

  class A extends p.A { int x; }

  [B]
  package q;

  class B extends A { int x; }

  [C]
  package q;

  class C extends B { int x; }

  [Main]
  package q;

  class Main {
    public int getX(C c) {
      return c.x;
    }
  }
}
]]

test cast to parent of enclosing class x [[
test;

[A1]
class A1 {
  int [[x]];
}

[A2]
class A2 extends A1 {
  int x;
}

[B1]
class B1 {
  int [[x]];
}

[B2]
class B2 extends B1 {
  int x;
}

[A3]
class A3 extends A2 {
  int x;
  class B3 extends B2 {
    int x;
    int y = [[x]];
  }
}
]]
run test-analyze to SUCCEED()
run fix-reference(|#3, #1) to [[
test;

[A1]
class A1 {
  int x;
}

[A2]
class A2 extends A1 {
  int x;
}

[B1]
class B1 {
  int x;
}

[B2]
class B2 extends B1 {
  int x;
}

[A3]
class A3 extends A2 {
  int x;
  class B3 extends B2 {
    int x;
    int y = ((A1) A3.this).x;
  }
}
]]

run fix-reference(|#3, #2) to [[
test;

[A1]
class A1 {
  int x;
}

[A2]
class A2 extends A1 {
  int x;
}

[B1]
class B1 {
  int x;
}

[B2]
class B2 extends B1 {
  int x;
}

[A3]
class A3 extends A2 {
  int x;
  class B3 extends B2 {
    int x;
    int y = ((B1) this).x;
  }
}
]]