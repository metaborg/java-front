module refret/intellij/refret/inlineSuperClass/oneAndKeepReferencesInAnotherInheritor_after

test oneAndKeepReferencesInAnotherInheritor_after: refret test 1 [[
  test;
  [Super]
      class Super {
      public static final String CONST = "CONST";
    }
  
  [Test]
      abstract class [[Test]] extends Super {
        public static final String [[CONST]] = "CONST";
  
        {
        System.out.println(CONST);
        System.out.println([[Super.CONST]]);
      }
    }
    abstract class Test1 extends Super {
      {
        System.out.println(CONST);
        System.out.println(Super.CONST);
      }
    }
    abstract class Test2{
    }
]] run fix-reference(|#3, #2, #1) to [[
  test;
  [Super]
      class Super {
      public static final String CONST = "CONST";
    }
  
  [Test]
      abstract class Test extends Super {
        public static final String CONST = "CONST";
  
        {
        System.out.println(CONST);
        System.out.println(Test.CONST);
      }
    }
    abstract class Test1 extends Super {
      {
        System.out.println(CONST);
        System.out.println(Super.CONST);
      }
    }
    abstract class Test2{
    }
]]

test oneAndKeepReferencesInAnotherInheritor_after: refret test 2 [[
  test;
  [Super]
      class [[Super]] {
      public static final String [[CONST]] = "CONST";
    }
  
  [Test]
      abstract class Test extends Super {
        public static final String CONST = "CONST";
  
        {
        System.out.println(CONST);
        System.out.println(Test.CONST);
      }
    }
    abstract class Test1 extends Super {
      {
        System.out.println(CONST);
        System.out.println([[Super.CONST]]);
      }
    }
    abstract class Test2{
    }
]] run fix-reference(|#3, #2, #1) to [[
  test;
  [Super]
      class Super {
      public static final String CONST = "CONST";
    }
  
  [Test]
      abstract class Test extends Super {
        public static final String CONST = "CONST";
  
        {
        System.out.println(CONST);
        System.out.println(Test.CONST);
      }
    }
    abstract class Test1 extends Super {
      {
        System.out.println(CONST);
        System.out.println(Super.CONST);
      }
    }
    abstract class Test2{
    }
]]

