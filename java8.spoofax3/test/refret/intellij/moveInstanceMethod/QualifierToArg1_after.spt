module refret/intellij/moveInstanceMethod/QualifierToArg1_after

test parse: QualifierToArg1_after [[
  test;
  [Test]
      class CommandQueue {
  
        void f() {
        }
    }
  
    class CommandManager {
  
        void g() {
  
        }
  
        CommandQueue getCommandQueue() {
            return null;
        }
    }
  
    class Application {
        CommandManager myManager;
        {
            myManager.getCommandQueue().f();
        }
    }
]] parse succeeds

test analysis 1: QualifierToArg1_after [[
  test;
  [Test]
      class CommandQueue {
  
        void f() {
        }
    }
  
    class CommandManager {
  
        void g() {
  
        }
  
        CommandQueue getCommandQueue() {
            return null;
        }
    }
  
    class Application {
        CommandManager myManager;
        {
            myManager.getCommandQueue().f();
        }
    }
]] analysis succeeds

test analysis 2: QualifierToArg1_after [[
  test;
  [Test]
      class CommandQueue {
  
        void f() {
        }
    }
  
    class CommandManager {
  
        void g() {
  
        }
  
        CommandQueue getCommandQueue() {
            return null;
        }
    }
  
    class Application {
        CommandManager myManager;
        {
            myManager.getCommandQueue().f();
        }
    }
]] run test-analyze to SUCCEED()

test refret 0: QualifierToArg1_after [[
  test;
  [Test]
      class CommandQueue {
  
        void [[f]]() {
        }
    }
  
    class CommandManager {
  
        void g() {
  
        }
  
        CommandQueue getCommandQueue() {
            return null;
        }
    }
  
    class Application {
        CommandManager myManager;
        {
            myManager.getCommandQueue().[[f]]();
        }
    }
]] run fix-reference(|#2, #1) to [[
  test;
  [Test]
      class CommandQueue {
  
        void f() {
        }
    }
  
    class CommandManager {
  
        void g() {
  
        }
  
        CommandQueue getCommandQueue() {
            return null;
        }
    }
  
    class Application {
        CommandManager myManager;
        {
            myManager.getCommandQueue().f();
        }
    }
]]

