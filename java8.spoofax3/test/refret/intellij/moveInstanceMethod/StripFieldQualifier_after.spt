module refret/intellij/moveInstanceMethod/StripFieldQualifier_after

test parse: StripFieldQualifier_after [[
  test;
  [Test]
      public class Test {
  
        private Bar bar = new Bar();
  
        private static class Bar {
            private int x;
  
            public void foo(int y) {
                x = y;
            }
        }
    }
]] parse succeeds

test analysis 1: StripFieldQualifier_after [[
  test;
  [Test]
      public class Test {
  
        private Bar bar = new Bar();
  
        private static class Bar {
            private int x;
  
            public void foo(int y) {
                x = y;
            }
        }
    }
]] analysis succeeds

test analysis 2: StripFieldQualifier_after [[
  test;
  [Test]
      public class Test {
  
        private Bar bar = new Bar();
  
        private static class Bar {
            private int x;
  
            public void foo(int y) {
                x = y;
            }
        }
    }
]] run test-analyze to SUCCEED()

test refret 0: StripFieldQualifier_after [[
  test;
  [Test]
      public class Test {
  
        private Bar bar = new Bar();
  
        private static class Bar {
            private int [[x]];
  
            public void foo(int y) {
                [[x]] = y;
            }
        }
    }
]] run fix-reference(|#2, #1) to [[
  test;
  [Test]
      public class Test {
  
        private Bar bar = new Bar();
  
        private static class Bar {
            private int x;
  
            public void foo(int y) {
                x = y;
            }
        }
    }
]]

test refret 1: StripFieldQualifier_after [[
  test;
  [Test]
      public class Test {
  
        private Bar bar = new Bar();
  
        private static class Bar {
            private int x;
  
            public void foo(int [[y]]) {
                x = [[y]];
            }
        }
    }
]] run fix-reference(|#2, #1) to [[
  test;
  [Test]
      public class Test {
  
        private Bar bar = new Bar();
  
        private static class Bar {
            private int x;
  
            public void foo(int y) {
                x = y;
            }
        }
    }
]]

