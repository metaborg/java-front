module refret/intellij/moveInstanceMethod/QualifierToArg2_after

test QualifierToArg2_after: parsing [[
  test;
  [Test]
      class CommandQueue {
  
        void f(CommandManager commandManager) {
          commandManager.g();
        }
    }
  
    class CommandManager {
  
        void g() {
  
        }
  
        CommandQueue getCommandQueue() {
            return null;
        }
    }
  
    class Application {
        CommandManager myManager;
        {
            myManager.getCommandQueue().f(myManager);
        }
    }
]] parse succeeds

test QualifierToArg2_after: default analysis [[
  test;
  [Test]
      class CommandQueue {
  
        void f(CommandManager commandManager) {
          commandManager.g();
        }
    }
  
    class CommandManager {
  
        void g() {
  
        }
  
        CommandQueue getCommandQueue() {
            return null;
        }
    }
  
    class Application {
        CommandManager myManager;
        {
            myManager.getCommandQueue().f(myManager);
        }
    }
]] analysis succeeds

test QualifierToArg2_after: test analysis [[
  test;
  [Test]
      class CommandQueue {
  
        void f(CommandManager commandManager) {
          commandManager.g();
        }
    }
  
    class CommandManager {
  
        void g() {
  
        }
  
        CommandQueue getCommandQueue() {
            return null;
        }
    }
  
    class Application {
        CommandManager myManager;
        {
            myManager.getCommandQueue().f(myManager);
        }
    }
]] run test-analyze to SUCCEED()

test QualifierToArg2_after: refret test 1 [[
  test;
  [Test]
      class CommandQueue {
  
        void f(CommandManager [[commandManager]]) {
          [[g()]];
        }
    }
  
    class CommandManager {
  
        void [[g]]() {
  
        }
  
        CommandQueue getCommandQueue() {
            return null;
        }
    }
  
    class Application {
        CommandManager myManager;
        {
            myManager.getCommandQueue().f(myManager);
        }
    }
]] run fix-reference(|#2, #3, #1) to [[
  test;
  [Test]
      class CommandQueue {
  
        void f(CommandManager commandManager) {
          commandManager.g();
        }
    }
  
    class CommandManager {
  
        void g() {
  
        }
  
        CommandQueue getCommandQueue() {
            return null;
        }
    }
  
    class Application {
        CommandManager myManager;
        {
            myManager.getCommandQueue().f(myManager);
        }
    }
]]

