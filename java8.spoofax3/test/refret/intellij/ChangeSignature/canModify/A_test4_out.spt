module refret/intellij/ChangeSignature/canModify/A_test4_out

test parse: A_test4_out [[
  test;
  [p] {
  [A]
      package p;
    class A{
    	private int m(
    	 int j,
    	 int i){
    		return m(1, m(j, i));
    	}
    }
  }
]] parse succeeds

test analysis: A_test4_out [[
  test;
  [p] {
  [A]
      package p;
    class A{
    	private int m(
    	 int j,
    	 int i){
    		return m(1, m(j, i));
    	}
    }
  }
]] run test-analyze to SUCCEED()

test refret 0: A_test4_out [[
  test;
  [p] {
  [A]
      package p;
    class A{
    	private int [[m]](
    	 int j,
    	 int i){
    		return [[m]](1, m(j, i));
    	}
    }
  }
]] run fix-reference(|#2, #1) to [[
  test;
  [p] {
  [A]
      package p;
    class A{
    	private int m(
    	 int j,
    	 int i){
    		return m(1, m(j, i));
    	}
    }
  }
]]

test refret 1: A_test4_out [[
  test;
  [p] {
  [A]
      package p;
    class A{
    	private int [[m]](
    	 int j,
    	 int i){
    		return m(1, [[m]](j, i));
    	}
    }
  }
]] run fix-reference(|#2, #1) to [[
  test;
  [p] {
  [A]
      package p;
    class A{
    	private int m(
    	 int j,
    	 int i){
    		return m(1, m(j, i));
    	}
    }
  }
]]

test refret 2: A_test4_out [[
  test;
  [p] {
  [A]
      package p;
    class A{
    	private int m(
    	 int [[j]],
    	 int i){
    		return m(1, m([[j]], i));
    	}
    }
  }
]] run fix-reference(|#2, #1) to [[
  test;
  [p] {
  [A]
      package p;
    class A{
    	private int m(
    	 int j,
    	 int i){
    		return m(1, m(j, i));
    	}
    }
  }
]]

test refret 3: A_test4_out [[
  test;
  [p] {
  [A]
      package p;
    class A{
    	private int m(
    	 int j,
    	 int [[i]]){
    		return m(1, m(j, [[i]]));
    	}
    }
  }
]] run fix-reference(|#2, #1) to [[
  test;
  [p] {
  [A]
      package p;
    class A{
    	private int m(
    	 int j,
    	 int i){
    		return m(1, m(j, i));
    	}
    }
  }
]]

