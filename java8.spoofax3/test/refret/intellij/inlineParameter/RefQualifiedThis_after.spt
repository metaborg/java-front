module refret/intellij/inlineParameter/RefQualifiedThis_after

test RefQualifiedThis_after: parsing [[
  test;
  [Subject]
      class Outer {
  
      String toString() { return ""; }
  
      class User {
        public class Subject {
          public void withClass() {
            System.out.println(Outer.this.toString());
          }
        }
  
        private void oper() {
          Subject subj = new Subject();
          subj.withClass();
        }
      }
    }
]] parse succeeds

test RefQualifiedThis_after: default analysis [[
  test;
  [Subject]
      class Outer {
  
      String toString() { return ""; }
  
      class User {
        public class Subject {
          public void withClass() {
            System.out.println(Outer.this.toString());
          }
        }
  
        private void oper() {
          Subject subj = new Subject();
          subj.withClass();
        }
      }
    }
]] analysis succeeds

test RefQualifiedThis_after: test analysis [[
  test;
  [Subject]
      class Outer {
  
      String toString() { return ""; }
  
      class User {
        public class Subject {
          public void withClass() {
            System.out.println(Outer.this.toString());
          }
        }
  
        private void oper() {
          Subject subj = new Subject();
          subj.withClass();
        }
      }
    }
]] run test-analyze to SUCCEED()

test RefQualifiedThis_after: refret test 1 [[
  test;
  [Subject]
      class [[Outer]] {
  
      String [[toString]]() { return ""; }
  
      class User {
        public class Subject {
          public void withClass() {
            System.out.println([[toString]]());
          }
        }
  
        private void oper() {
          Subject subj = new Subject();
          subj.withClass();
        }
      }
    }
]] run fix-reference(|#3, #2, #1) to [[
  test;
  [Subject]
      class Outer {
  
      String toString() { return ""; }
  
      class User {
        public class Subject {
          public void withClass() {
            System.out.println(Outer.this.toString());
          }
        }
  
        private void oper() {
          Subject subj = new Subject();
          subj.withClass();
        }
      }
    }
]]

