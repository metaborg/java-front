module refret/intellij/inlineSuperClass/simple_after

test simple_after: parsing [[
  test;
  [Usage]
      import p.Test;
  
    class Usage {
      void bar(Test s) {
        s.foo();
      }
    }
  [p] {
  [Test]
      package p;
  
    public class Test {
        public void foo() {
          System.out.println("Hello");
        }
    }
  }
]] parse succeeds

test simple_after: default analysis [[
  test;
  [Usage]
      import p.Test;
  
    class Usage {
      void bar(Test s) {
        s.foo();
      }
    }
  [p] {
  [Test]
      package p;
  
    public class Test {
        public void foo() {
          System.out.println("Hello");
        }
    }
  }
]] analysis succeeds

test simple_after: test analysis [[
  test;
  [Usage]
      import p.Test;
  
    class Usage {
      void bar(Test s) {
        s.foo();
      }
    }
  [p] {
  [Test]
      package p;
  
    public class Test {
        public void foo() {
          System.out.println("Hello");
        }
    }
  }
]] run test-analyze to SUCCEED()

test simple_after: refret test 1 [[
  test;
  [Usage]
      import p.Test;
  
    class Usage {
      void bar(Test [[s]]) {
        [[foo()]];
      }
    }
  [p] {
  [Test]
      package p;
  
    public class Test {
        public void [[foo]]() {
          System.out.println("Hello");
        }
    }
  }
]] run fix-reference(|#2, #3, #1) to [[
  test;
  [Usage]
      import p.Test;
  
    class Usage {
      void bar(Test s) {
        s.foo();
      }
    }
  [p] {
  [Test]
      package p;
  
    public class Test {
        public void foo() {
          System.out.println("Hello");
        }
    }
  }
]]

