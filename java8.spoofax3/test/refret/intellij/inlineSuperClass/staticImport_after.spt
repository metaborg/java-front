module refret/intellij/inlineSuperClass/staticImport_after

test staticImport_after: parsing [[
  test;
  [Usage]
      import static p.Test.CONSTANT;
    import static p.Test.statMeth;
    class Usage {
      public void context() {
          String v = CONSTANT;
          statMeth();
      }
    }
  [p] {
  [Test]
      package p;
  
    public class Test {
        public static final String CONSTANT = "";
  
        public static void statMeth() {}
    }
  }
]] parse succeeds

test staticImport_after: default analysis [[
  test;
  [Usage]
      import static p.Test.CONSTANT;
    import static p.Test.statMeth;
    class Usage {
      public void context() {
          String v = CONSTANT;
          statMeth();
      }
    }
  [p] {
  [Test]
      package p;
  
    public class Test {
        public static final String CONSTANT = "";
  
        public static void statMeth() {}
    }
  }
]] analysis succeeds

test staticImport_after: test analysis [[
  test;
  [Usage]
      import static p.Test.CONSTANT;
    import static p.Test.statMeth;
    class Usage {
      public void context() {
          String v = CONSTANT;
          statMeth();
      }
    }
  [p] {
  [Test]
      package p;
  
    public class Test {
        public static final String CONSTANT = "";
  
        public static void statMeth() {}
    }
  }
]] run test-analyze to SUCCEED()

test staticImport_after: refret test 1 [[
  test;
  [Usage]
      import static [[CONSTANT]];
    import static p.Test.statMeth;
    class Usage {
      public void context() {
          String v = CONSTANT;
          statMeth();
      }
    }
  [p] {
  [Test]
      package p;
  
    public class Test {
        public static final String [[CONSTANT]] = "";
  
        public static void statMeth() {}
    }
  }
]] run fix-reference(|#1, #2) to [[
  test;
  [Usage]
      import static p.Test.CONSTANT;
    import static p.Test.statMeth;
    class Usage {
      public void context() {
          String v = CONSTANT;
          statMeth();
      }
    }
  [p] {
  [Test]
      package p;
  
    public class Test {
        public static final String CONSTANT = "";
  
        public static void statMeth() {}
    }
  }
]]

test staticImport_after: refret test 2 [[
  test;
  [Usage]
      import static p.Test.CONSTANT;
    import static [[statMeth]];
    class Usage {
      public void context() {
          String v = CONSTANT;
          statMeth();
      }
    }
  [p] {
  [Test]
      package p;
  
    public class Test {
        public static final String CONSTANT = "";
  
        public static void [[statMeth]]() {}
    }
  }
]] run fix-reference(|#1, #2) to [[
  test;
  [Usage]
      import static p.Test.CONSTANT;
    import static p.Test.statMeth;
    class Usage {
      public void context() {
          String v = CONSTANT;
          statMeth();
      }
    }
  [p] {
  [Test]
      package p;
  
    public class Test {
        public static final String CONSTANT = "";
  
        public static void statMeth() {}
    }
  }
]]

