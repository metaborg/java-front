module refret/intellij/inlineMethod/SuperMethodInAnonymousClass_after

test SuperMethodInAnonymousClass_after: parsing [[
  test;
  [Test]
      class A {
  
        public void g() {
        }
      }
  
      class B extends A {
        public void g() {
  
        }
        public void h() {
          new Runnable() {
  
            @Override
            public void run() {
                g();
            }
          }.run();
        }
      }
]] parse succeeds

test SuperMethodInAnonymousClass_after: default analysis [[
  test;
  [Test]
      class A {
  
        public void g() {
        }
      }
  
      class B extends A {
        public void g() {
  
        }
        public void h() {
          new Runnable() {
  
            @Override
            public void run() {
                g();
            }
          }.run();
        }
      }
]] analysis succeeds

test SuperMethodInAnonymousClass_after: test analysis [[
  test;
  [Test]
      class A {
  
        public void g() {
        }
      }
  
      class B extends A {
        public void g() {
  
        }
        public void h() {
          new Runnable() {
  
            @Override
            public void run() {
                g();
            }
          }.run();
        }
      }
]] run test-analyze to SUCCEED()

test SuperMethodInAnonymousClass_after: refret test 1 [[
  test;
  [Test]
      class A {
  
        public void g() {
        }
      }
  
      class B extends A {
        public void [[g]]() {
  
        }
        public void h() {
          new Runnable() {
  
            @Override
            public void run() {
                [[g]]();
            }
          }.run();
        }
      }
]] run fix-reference(|#2, #1) to [[
  test;
  [Test]
      class A {
  
        public void g() {
        }
      }
  
      class B extends A {
        public void g() {
  
        }
        public void h() {
          new Runnable() {
  
            @Override
            public void run() {
                g();
            }
          }.run();
        }
      }
]]

