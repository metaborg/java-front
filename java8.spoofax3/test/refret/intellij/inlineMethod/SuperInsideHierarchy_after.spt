module refret/intellij/inlineMethod/SuperInsideHierarchy_after

test parse: SuperInsideHierarchy_after [[
  test;
  [Test]
      class A {
      void foo(){
        //do smth in A
      }
    }
  
    class B extends A {
  
        void test(){
            super.foo();  // Context: super
        }
  
      void foo() {
        //do smth
      }
    }
]] parse succeeds

test analysis 1: SuperInsideHierarchy_after [[
  test;
  [Test]
      class A {
      void foo(){
        //do smth in A
      }
    }
  
    class B extends A {
  
        void test(){
            super.foo();  // Context: super
        }
  
      void foo() {
        //do smth
      }
    }
]] analysis succeeds

test analysis 2: SuperInsideHierarchy_after [[
  test;
  [Test]
      class A {
      void foo(){
        //do smth in A
      }
    }
  
    class B extends A {
  
        void test(){
            super.foo();  // Context: super
        }
  
      void foo() {
        //do smth
      }
    }
]] run test-analyze to SUCCEED()

test refret 0: SuperInsideHierarchy_after [[
  test;
  [Test]
      class A {
      void [[foo]](){
        //do smth in A
      }
    }
  
    class B extends A {
  
        void test(){
            [[foo]]();  // Context: super
        }
  
      void foo() {
        //do smth
      }
    }
]] run fix-reference(|#2, #1) to [[
  test;
  [Test]
      class A {
      void foo(){
        //do smth in A
      }
    }
  
    class B extends A {
  
        void test(){
            super.foo();  // Context: super
        }
  
      void foo() {
        //do smth
      }
    }
]]

